/* $Id$ */

/*
Version: 1.0.0
Supported Browsers: IE10+, FireFox, and Chrome. Most will work with other modern browsers.
*/

/*
## Naming Conventions

In general, the following naming convention is used.

{css-property-name}-{css-property-value}

## Common Suffixes Map

- h  => horizontal
- lt => left
- no => none
- rt => right
- v  => vertical

*/


/* Uncomment the following once it starts to be used.
#Flexbox Layout Related

Defines behaviour for how flex items are laid out along the cross-axis. To be set on the flex container as opposed to
a flex item.

.align-items-baseline { -ms-flex-align: baseline !important; align-items: baseline !important; }
.align-items-center { -ms-flex-align: center !important; align-items: center !important; }
.align-items-flex-end { -ms-flex-align: end !important; align-items: flex-end !important; }
.align-items-flex-start { -ms-flex-align: start !important; align-items: flex-start !important; }
.align-items-stretch { -ms-flex-align: stretch !important; align-items: stretch !important; }
*/


/* Uncomment the following once it starts to be used.
#Flexbox Layout Related

To be set on the flex item as opposed to a flex container.

.align-self-auto { align-self: auto !important; }
.align-self-baseline { align-self: baseline !important; }
.align-self-center { align-self: center !important; }
.align-self-flex-end { align-self: flex-end !important; }
.align-self-flex-start { align-self: flex-start !important; }
.align-self-stretch { align-self: stretch !important; }
*/


/* Uncomment the following once it starts to be used.
.background-transparent,
.bg-transparent { background: transparent !important; }
*/
/* TODO: Determine whether it is wise to setup some background-color properties like the following.
.background-blue,
.bg-blue { background: blue !important; }
.background-green,
.bg-green { background: green !important; }
.background-red,
.bg-red { background: red !important; }
.background-white,
.bg-white { background: white !important; }
 */


.border-less { border: 0px !important; }


.box-sizing-border-box,
.border-box { -moz-box-sizing: border-box !important; -webkit-box-sizing: border-box !important; box-sizing: border-box !important; }
.box-sizing-content-box,
.content-box { -moz-box-sizing: content-box !important; -webkit-box-sizing: content-box !important; box-sizing: content-box !important; }


.clear-both,
.clear { clear: both !important; }
.clear-left { clear: left !important; }
.clear-none { clear: none !important; }
.clear-right { clear: right !important; }


/*
The clearfix hack allows the use of floated elements in a container without needing to add presentational markup such
as <br class="clear"> or something similar to the end of the container markup.

<div class="clearfix">
    <div class="floated"></div>
    <div class="floated"></div>
    <div class="floated"></div>
    <!-- <br style="clear:both"> not needed. -->
</div>

http://blog.teamtreehouse.com/a-better-clearfix-with-sass
http://nicolasgallagher.com/micro-clearfix-hack/
See stubbornella.org and OOCSS for some other documented examples of clearfixes.
*/
.clearfix::before,
.clearfix::after { content: " " !important; display: table !important; }
.clearfix::after { clear: both !important; }


/* TODO: Setup color properties. */


/* Uncomment the following once it starts to be used.
.cursor-all-scroll,
.cur-all-scroll { cursor: all-scroll !important; }
.cursor-auto,
.cur-auto { cursor: auto !important; }
.cursor-cell,
.cur-cell { cursor: cell !important; }
.cursor-col-resize,
.cur-col-resize { cursor: col-resize !important; }
.cursor-context-menu,
.cur-context-menu { cursor: context-menu !important; }
.cursor-copy,
.cur-copy { cursor: copy !important; }
.cursor-crosshair,
.cur-crosshair { cursor: crosshair !important; }
.cursor-default,
.cur-default { cursor: default !important; }
.cursor-e-resize,
.cur-e-resize { cursor: e-resize !important; }
.cursor-ew-resize,
.cur-ew-resize { cursor: ew-resize !important; }
.cursor-help,
.cur-help { cursor: help !important; }
.cursor-move,
.cur-move { cursor: move !important; }
.cursor-n-resize,
.cur-n-resize { cursor: n-resize !important; }
.cursor-ne-resize,
.cur-ne-resize { cursor: ne-resize !important; }
.cursor-nesw-resize,
.cur-nesw-resize { cursor: nesw-resize !important; }
.cursor-ns-resize,
.cur-ns-resize { cursor: ns-resize !important; }
.cursor-nw-resize,
.cur-nw-resize { cursor: nw-resize !important; }
.cursor-nwse-resize,
.cur-nwse-resize { cursor: nwse-resize !important; }
.cursor-no-drop,
.cur-no-drop { cursor: no-drop !important; }
.cursor-none,
.cur-none { cursor: none !important; }
.cursor-not-allowed,
.cur-not-allowed { cursor: not-allowed !important; }
.cursor-pointer,
.cur-pointer { cursor: pointer !important; }
.cursor-progress,
.cur-progress { cursor: progress !important; }
.cursor-row-resize,
.cur-row-resize { cursor: row-resize !important; }
.cursor-s-resize,
.cur-s-resize { cursor: s-resize !important; }
.cursor-se-resize,
.cur-se-resize { cursor: se-resize !important; }
.cursor-sw-resize,
.cur-sw-resize { cursor: sw-resize !important; }
.cursor-text,
.cur-text { cursor: text !important; }
.cursor-vertical-text,
.cur-vertical-text { cursor: vertical-text !important; }
.cursor-w-resize,
.cur-w-resize { cursor: w-resize !important; }
.cursor-wait,
.cur-wait { cursor: wait !important; }
.cursor-zoom-in,
.cur-zoom-in { cursor: zoom-in !important; }
.cursor-zoom-out,
.cur-zoom-out { cursor: zoom-out !important; }
*/

.display-block,
.block { display: block !important; }

/* Uncomment the following once it starts to be used.
#Flexbox Layout Related

http://dev.opera.com/articles/advanced-cross-browser-flexbox/ recommends using the following for x-browser:
display: -ms-flexbox; // IE10 likes this one.
display: -webkit-flex;
display: -moz-flex;
display: -ms-flex; // IE10 doesn't seem to recognize.
display: flex;

.display-flex,
.flex-layout { display: -ms-flexbox !important; display: flex !important; }
*/

/* Uncomment the following once it starts to be used.
.display-grid,
.grid-layout { display: -ms-grid !important; display: grid !important; }
*/

.display-inline,
.inline { display: inline !important; }
table.display-inline,
table.inline { display: inline-table !important; }

.display-inline-block,
.inline-block { display: inline-block !important; }

/* Uncomment the following once it starts to be used.
#Flexbox Layout Related

.display-inline-flex,
.inline-flex-layout { display: -ms-inline-flexbox !important; display: inline-flex !important; }
*/

/*
Why use `hidden` class with `display` instead of `visibility`. The `display` property is typically what is changed
when one wants something to be hidden. That is, it was chosen because it is the most natural. Also, it matches the
behavior of the HTML5 hidden attribute. It is rare when one wants to set `visibility` to `hidden`. Use the
`invisible` class for that.
*/
.display-none,
.print-only,
.hidden, [hidden] { display: none !important; }

/*
a, abbr, acronym (deprecated, use abbr instead), b, big (deprecated), br, button, cite, code, del, dfn, em, i, iframe,
img, input, ins, kbd, label, legend, q, samp, small, span, strong, sub, sup, textarea, tt, var.
*/
/*
Commenting all the `shown` styles. If you want an element shown, then remove one of the "hidden" classes listed above.
.is-shown, .shown { display: inline !important; }

audio.shown,
canvas.shown,
progress.shown,
select.shown,
video.shown { display: inline-block !important; }

address.shown,
article.shown,
aside.shown,
blockquote.shown,
dd.shown,
details.shown,
div.shown,
dl.shown,
dt.shown,
fieldset.shown,
figcaption.shown,
figure.shown,
footer.shown,
form.shown,
h1.shown,
h2.shown,
h3.shown,
h4.shown,
h5.shown,
h6.shown,
header.shown,
hgroup.shown,
hr.shown,
main.shown,
map.shown,
nav.shown,
noscript.shown,
object.shown,
ol.shown,
optgroup.shown,
option.shown,
p.shown,
pre.shown,
section.shown,
summary.shown,
table.shown,
td.shown,
th.shown,
tr.shown,
ul.shown { display: block !important; }
caption.shown { display: table-caption !important; }
li.shown { display: list-item !important; }
table.shown { display: table !important; }
tbody.shown { display: table-row-group !important; }
tfoot.shown { display: table-footer-group !important; }
thead.shown { display: table-header-group !important; }
td.shown,
th.shown { display: table-cell !important; }
tr.shown { display: table-row !important; }
*/


/* Uncomment the following once it starts to be used.
#Flexbox Layout Related

.flex-direction-column { -ms-flex-direction: column !important; flex-direction: column !important; }
.flex-direction-column-reverse { -ms-flex-direction: column-reverse !important; flex-direction: column-reverse !important; }
.flex-direction-row { -ms-flex-direction: row !important; flex-direction: row !important; }
.flex-direction-row-reverse { -ms-flex-direction: row-reverse !important; flex-direction: row-reverse !important; }
*/


/* Uncomment the following once it starts to be used.
#Flexbox Layout Related

.flex-flow-column-nowrap,
.flex-flow-column { -ms-flex-direction: column !important; flex-direction: column !important; -ms-flex-wrap: none !important; flex-wrap: nowrap !important; }
.flex-flow-column-wrap { -ms-flex-direction: column !important; flex-direction: column !important; -ms-flex-wrap: wrap !important; flex-wrap: wrap !important; }
.flex-flow-column-wrap-reverse { -ms-flex-direction: column !important; flex-direction: column !important; -ms-flex-wrap: wrap-reverse !important; flex-wrap: wrap-reverse !important; }
.flex-flow-column-reverse-nowrap,
.flex-flow-column-reverse { -ms-flex-direction: column-reverse !important; flex-direction: column-reverse !important; -ms-flex-wrap: none !important; flex-wrap: nowrap !important; }
.flex-flow-column-reverse-wrap { -ms-flex-direction: column-reverse !important; flex-direction: column-reverse !important; -ms-flex-wrap: wrap !important; flex-wrap: wrap !important; }
.flex-flow-column-reverse-wrap-reverse { -ms-flex-direction: column-reverse !important; flex-direction: column-reverse !important; -ms-flex-wrap: wrap-reverse !important; flex-wrap: wrap-reverse !important; }
.flex-flow-row-nowrap,
.flex-flow-row,
.flex-flow { -ms-flex-direction: row !important; flex-direction: row !important; -ms-flex-wrap: none !important; flex-wrap: nowrap !important; }
.flex-flow-row-wrap { -ms-flex-direction: row !important; flex-direction: row !important; -ms-flex-wrap: wrap !important; flex-wrap: wrap !important; }
.flex-flow-row-wrap-reverse { -ms-flex-direction: row !important; flex-direction: row !important; -ms-flex-wrap: wrap-reverse !important; flex-wrap: wrap-reverse !important; }
.flex-flow-row-reverse-nowrap,
.flex-flow-row-reverse { -ms-flex-direction: row-reverse !important; flex-direction: row-reverse !important; -ms-flex-wrap: none !important; flex-wrap: nowrap !important; }
.flex-flow-row-reverse-wrap { -ms-flex-direction: row-reverse !important; flex-direction: row-reverse !important; -ms-flex-wrap: wrap !important; flex-wrap: wrap !important; }
.flex-flow-row-reverse-wrap-reverse { -ms-flex-direction: row-reverse !important; flex-direction: row-reverse !important; -ms-flex-wrap: wrap-reverse !important; flex-wrap: wrap-reverse !important; }
*/


/* Uncomment the following once it starts to be used.
#Flexbox Layout Related

.flex-wrap-nowrap { -ms-flex-wrap: none !important; flex-wrap: nowrap !important; }
.flex-wrap-wrap { -ms-flex-wrap: wrap !important; flex-wrap: wrap !important; }
.flex-wrap-wrap-reverse { -ms-flex-wrap: wrap-reverse !important; flex-wrap: wrap-reverse !important; }
*/


.float-left { float: left !important; }
.float-right { float: right !important; }
.float-none { float: none !important; }


.font-style-italic,
.italic { font-style: italic !important; }
.font-style-normal,
.normal { font-style: normal !important; }
.font-style-oblique,
.oblique { font-style: oblique !important; }


.font-variant-normal { font-variant: normal !important; }
.font-variant-small-caps { font-variant: small-caps !important; }


.font-weight-normal { font-weight: normal !important; }
.font-weight-bold,
.bold { font-weight: bold !important; }
.font-weight-bolder,
.bolder { font-weight: bolder !important; }
.font-weight-lighter,
.lighter { font-weight: lighter !important; }


.height-auto { height: auto !important; }
.height-full { height: 100% !important; }


/* Uncomment the following once it starts to be used.
#Flexbox Layout Related

Defines behaviour for how flex items are laid out along the main-axis. To be set on the flex container as opposed to
a flex item.

.justify-content-center { -ms-flex-pack: center !important; justify-content: center !important; }
.justify-content-flex-end { -ms-flex-pack: end !important; justify-content: flex-end !important; }
.justify-content-flex-start { -ms-flex-pack: start !important; justify-content: flex-start !important; }
.justify-content-space-between { -ms-flex-pack: justify !important; justify-content: space-between !important; }
.justify-content-space-around { -ms-flex-pack: distribute !important; justify-content: space-around !important; }
*/


.letter-spacing-normal { letter-spacing: normal !important; }


.margin-none { margin: 0 !important; }


.opacity-100,
.opaque { opacity: 1 !important; }
.opacity-90 { opacity: .9 !important; }
.opacity-80 { opacity: .8 !important; }
.opacity-70 { opacity: .7 !important; }
.opacity-60 { opacity: .6 !important; }
.opacity-50 { opacity: .5 !important; }
.opacity-40 { opacity: .4 !important; }
.opacity-30 { opacity: .3 !important; }
.opacity-20 { opacity: .2 !important; }
.opacity-10 { opacity: .1 !important; }
.opacity-0 { opacity: 0 !important; }


.outline-none { outline: none !important; }


/* Uncomment the following once it starts to be used.
.overflow-auto { overflow: auto !important; }
.overflow-hidden { overflow: hidden !important; }
.overflow-scroll { overflow: scroll !important; }
.overflow-visible { overflow: visible !important; }

.overflow-x-auto { overflow-x: auto !important; }
.overflow-x-hidden { overflow-x: hidden !important; }
.overflow-x-scroll { overflow-x: scroll !important; }
.overflow-x-visible { overflow-x: visible !important; }

.overflow-y-auto { overflow-y: auto !important; }
.overflow-y-hidden { overflow-y: hidden !important; }
.overflow-y-scroll { overflow-y: scroll !important; }
.overflow-y-visible { overflow-y: visible !important; }
*/


.padding-none { padding: 0 !important; }


.position-absolute { position: absolute !important; }
.position-fixed,
.fixed { position: fixed !important; }
.position-relative { position: relative !important; }
.position-static { position: static !important; }


/*
TODO: Document which browsers support this.
*/
/* Uncomment the following once it starts to be used.
.resize-both,
.resize { resize: both !important; }
.resize-none,
.resize-n { resize: none !important; }
.resize-horizontal,
.resize-h { resize: horizontal !important; }
.resize-vertical,
.resize-v { resize: vertical !important; }
*/


/* Uncomment the following once it starts to be used.
.table-layout-auto { table-layout: auto !important; }
.table-layout-fixed { table-layout: fixed !important; }
*/


/* Use the following instead of Bootstrap's .text-center. Theirs is not declared important. */
.text-align-center,
.center { text-align: center !important; }
/* Use the following instead of Bootstrap's .text-justify. Theirs is not declared important. */
.text-align-justify,
.justify { text-align: justify !important; }
/* Use the following instead of Bootstrap's .text-left. Theirs is not declared important. */
.text-align-left,
.left { text-align: left !important; }
/* Use the following instead of Bootstrap's .text-right. Theirs is not declared important. */
.text-align-right,
.right { text-align: right !important; }


.text-overflow-clip { text-overflow: clip !important; }
.text-overflow-ellipsis,
.ellipsis { text-overflow: ellipsis !important; }


.text-decoration-line-through,
.strike,
.lined-through { text-decoration: line-through !important; }
.text-decoration-none { text-decoration: none !important; }
.text-decoration-overline,
.overlined { text-decoration: overline !important; }
.text-decoration-underline,
.underlined { text-decoration: underline !important; }
.text-decoration-overline-underline,
.overlined-underlined { text-decoration: overline underline !important; }


/* Use the following instead of Bootstrap's .text-capitalize. Theirs is not declared important. */
.text-transform-capitalize,
.capitalized { text-transform: capitalize !important; }
/* Use the following instead of Bootstrap's .text-lowercase. Theirs is not declared important. */
.text-transform-lowercase,
.lowercased { text-transform: lowercase !important; }
.text-transform-none { text-transform: none !important; }
/* Use the following instead of Bootstrap's .text-uppercase. Theirs is not declared important. */
.text-transform-uppercase,
.uppercased { text-transform: uppercase !important; }


/* Uncomment the following once it starts to be used.
.rotate-45 { -ms-transform: rotate(45deg) !important; -webkit-transform: rotate(45deg) !important; transform: rotate(45deg) !important; }
.rotate-90 { -ms-transform: rotate(90deg) !important; -webkit-transform: rotate(90deg) !important; transform: rotate(90deg) !important; }
.rotate-135 { -ms-transform: rotate(135deg) !important; -webkit-transform: rotate(135deg) !important; transform: rotate(135deg) !important; }
.rotate-180 { -ms-transform: rotate(180deg) !important; -webkit-transform: rotate(180deg) !important; transform: rotate(180deg) !important; }
.rotate-270 { -ms-transform: rotate(270deg) !important; -webkit-transform: rotate(270deg) !important; transform: rotate(270deg) !important; }
*/


.vertical-align-baseline,
.valign-baseline { vertical-align: baseline !important; }
.vertical-align-bottom,
.valign-bottom { vertical-align: bottom !important; }
.vertical-align-middle,
.valign-middle { vertical-align: middle !important; }
.vertical-align-sub,
.valign-sub { vertical-align: sub !important; }
.vertical-align-super,
.valign-super { vertical-align: super !important; }
.vertical-align-text-bottom,
.valign-text-bottom { vertical-align: text-bottom !important; }
.vertical-align-text-top,
.valign-text-top { vertical-align: text-top !important; }
.vertical-align-top,
.valign-top { vertical-align: top !important; }


.visibility-hidden,
.vis-hidden,
.invisible { visibility: hidden !important; }
.visibility-collapse,
.vis-collapse { visibility: collapse !important; }
/*
.visibility-visible,
.vis-visible,
.is-visible,
.visible { visibility: visible !important; }
*/


/* Uncomment the following once it starts to be used.
TODO: Document what these do.
.user-input-enabled { -webkit-user-input: enabled !important; -khtml-user-input: enabled !important; -moz-user-input: enabled !important; -o-user-input: enabled !important; user-input: enabled !important; }
.user-input-disabled { -webkit-user-input: disabled !important; -khtml-user-input: disabled !important; -moz-user-input: disabled !important; -o-user-input: disabled !important; user-input: disabled !important; }
.user-input-none { -webkit-user-input: none !important; -khtml-user-input: none !important; -moz-user-input: none !important; -o-user-input: none !important; user-input: none !important; }
*/


/* Uncomment the following once it starts to be used.
TODO: Document what these do.
.user-select-none { -webkit-user-select: none !important; -moz-user-select: none !important; -ms-user-select: none !important; -o-user-select: none !important; user-select: none !important; cursor: default !important; }
.user-select-text { -webkit-user-select: text !important; -moz-user-select: text !important; -ms-user-select: text !important; -o-user-select: text !important; user-select: text !important; }
*/


.white-space-normal,
.ws-normal { white-space: normal !important; }
/* Use the following instead of Bootstrap's .text-nowrap. Theirs is not declared important. */
.white-space-nowrap,
.ws-nowrap,
.nowrap { white-space: nowrap !important; }
.white-space-pre,
.ws-pre,
.pre { white-space: pre !important; }
.white-space-pre-line,
.ws-pre-line,
.pre-line { white-space: pre-line !important; }
.white-space-pre-wrap,
.ws-pre-wrap,
.pre-wrap { white-space: pre-wrap !important; }


.width-auto { width: auto !important; }
.width-half { width: 50% !important; }
.width-full { width: 100% !important; }


.word-break-break-all { word-break: break-all !important; }
.word-break-normal { word-break: normal !important; }
.word-break-keep-all { word-break: keep-all !important; }


.word-spacing-normal { word-spacing: normal !important; }


.word-wrap-normal { word-wrap: normal !important; }
.word-wrap-break-word { word-wrap: break-word !important; }


/*
 * An imperceptible element is one that can't be perceived. It is not only invisible but also takes up no space. If
 * it took up any space, then it could potentially be perceived by the fact that surrounding elements would be in a
 * different position than they would be otherwise.
 * 
 * We don't ever what to add visibility: hidden to the imperceptible class. Yes, it would make it invisible. However,
 * when visibility: hidden is used on a submit button, some browsers treat the submit button as if it were
 * non-existent. Similarly with display: none.
 * 
 * NOTE: The following is in alpha. It has not been extensively tested and properties may change in the future. But
 * for now it suits our purpose of making a submit button imperceptible.
 */
.imperceptible { display: block !important; width: 0 !important; height: 0 !important; margin: 0 !important; padding: 0 !important; border: 0  !important; }

@media print {

    .page-break-after-always { page-break-after: always !important; }
    .page-break-after-auto { page-break-after: auto !important; }
    .page-break-after-avoid { page-break-after: avoid !important; }
    .page-break-after-left { page-break-after: left !important; }
    .page-break-after-right { page-break-after: right !important; }


    .page-break-before-always { page-break-before: always !important; }
    .page-break-before-auto { page-break-before: auto !important; }
    .page-break-before-avoid { page-break-before: avoid !important; }
    .page-break-before-left { page-break-before: left !important; }
    .page-break-before-right { page-break-before: right !important; }


    .page-break-inside-auto { page-break-inside: auto !important; }
    .page-break-inside-avoid { page-break-inside: avoid !important; }


    .print-hide { visibility: hidden !important; }
    .print-none, .noprint { display: none !important; }
    .print-only { display: initial !important; display: inherit !important; }

} /* eo @media print */
